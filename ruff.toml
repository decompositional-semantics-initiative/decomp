# Ruff configuration for decomp package

# Set target Python version
target-version = "py312"

# Line length configuration
line-length = 100

# Configure to check but NOT auto-fix
fix = false

[lint]
# Enable specific rule sets
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "SIM",   # flake8-simplify
    "I",     # isort
    "N",     # pep8-naming
    "D",     # pydocstyle
    "C90",   # mccabe complexity
    "RUF",   # Ruff-specific rules
]

# Ignore specific rules
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D107",  # Missing docstring in __init__
    "D203",  # 1 blank line required before class docstring (conflicts with D211)
    "D213",  # Multi-line docstring summary should start at the second line (conflicts with D212)
]

# Configure NumPy docstring convention
[lint.pydocstyle]
convention = "numpy"

# Per-file ignores
[lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files
"tests/*" = ["D"]  # Ignore all docstring rules in tests

# McCabe complexity
[lint.mccabe]
max-complexity = 10

# Import sorting configuration
[lint.isort]
known-first-party = ["decomp"]
force-single-line = false
lines-after-imports = 2